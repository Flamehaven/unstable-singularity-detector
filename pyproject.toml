[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "unstable-singularity-detector"
version = "1.3.2"
authors = [
    {name = "Flamehaven Research", email = "research@flamehaven.ai"},
]
description = "Revolutionary implementation of DeepMind's breakthrough in fluid dynamics singularities"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["fluid-dynamics", "physics-informed-neural-networks", "deepmind", "singularities", "pde"]

dependencies = [
    "torch>=2.0.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "h5py>=3.7.0",
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "mlflow>=2.5.0",
    "tqdm>=4.62.0",
    "plotly>=5.0.0",
    "pandas>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.15.0",
    "safety>=2.0.0",
    "bandit[toml]>=1.7.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
dvc = [
    "dvc>=3.0.0",
    "dvc[s3]>=3.0.0",
]
all = [
    "unstable-singularity-detector[dev,docs,dvc]"
]

[project.urls]
Homepage = "https://github.com/flamehaven/unstable-singularity-detector"
Documentation = "https://unstable-singularity-detector.readthedocs.io"
Repository = "https://github.com/flamehaven/unstable-singularity-detector"
"Bug Tracker" = "https://github.com/flamehaven/unstable-singularity-detector/issues"

[project.scripts]
singularity-detect = "src.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Flake8 linting
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]